package br.com.cidade.controller;

import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;

@RunWith(SpringRunner.class)
@AutoConfigureMockMvc
@SpringBootTest
public class AddressSearchControllerIntegrationTests {
	
	@Autowired
	MockMvc mvc;

	@Test
	public void shouldReturnInvalid() throws Exception {
		String invalidCep = "123456789";
		mvc
			.perform(
					MockMvcRequestBuilders
						.get(AddressSearchController.BASE_PATH)
						.contentType(MediaType.APPLICATION_JSON_UTF8)
						.param("cep", invalidCep))
			.andExpect(status().isBadRequest())
			.andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8))
			.andExpect(content().json("{\"content\":null,\"message\":\"CEP inválido\"}", true))
			.andDo(print())
			.andReturn();
	}

	@Test
	public void shouldReturnNotFound() throws Exception {
		String invalidCep = "123456789";
		mvc
			.perform(
					MockMvcRequestBuilders
						.get(AddressSearchController.BASE_PATH)
						.contentType(MediaType.APPLICATION_JSON_UTF8)
						.param("cep", invalidCep))
			.andExpect(status().isBadRequest())
			.andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8))
			.andExpect(content().json("{\"content\":null,\"message\":\"CEP inválido\"}", true))
			.andDo(print())
			.andReturn();
	}
}
