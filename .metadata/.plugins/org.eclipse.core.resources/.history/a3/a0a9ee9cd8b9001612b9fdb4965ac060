package br.com.cidade.controller;

import javax.xml.ws.Response;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
/**
 * Controller para consulta de endereço por CEP
 * Como retorno é a entidade Address (Endereço) e não o CEP, nomeei o recurso como address
 * e vou tratar o CEP apenas como filtro de busca 
 * @author ramoncidade
 *
 */

import br.com.cidade.bean.AddressBean;
import br.com.cidade.bean.ZipcodeBean;
import br.com.cidade.bean.utils.GenericResponse;
import br.com.cidade.business.AddressSearchBusiness;
@RestController
@RequestMapping(path=AddressSearchController.BASE_PATH,consumes=MediaType.APPLICATION_JSON_UTF8_VALUE,produces=MediaType.APPLICATION_JSON_UTF8_VALUE)
public class AddressSearchController {

	private static final String ADDRESS_NOT_FOUND = "Address not found";

	static final String BASE_PATH = "/rest/address";

	AddressSearchBusiness business;
	
	@Autowired
	public AddressSearchController(AddressSearchBusiness business) {
		this.business = business;
	}
	
	/**
	 * Endpoint para busca de um endereço a partir de um CEP válido
	 */
	@GetMapping
	public void findAddressByCEP(@RequestParam(name="cep",required=true)String cep){
		HttpStatus status;
		GenericResponse<AddressBean> response;
		ZipcodeBean zipcode = new ZipcodeBean(cep);
		
		AddressBean address = this.business.findAddressByZipcode(zipcode);
		if(address != null){
			response = new GenericResponse<AddressBean>(address);
		}else{
			response = new GenericResponse<AddressBean>(address,ADDRESS_NOT_FOUND);
		}
		
		
		return ResponseEntity<GenericResponse>(response,status);
	}
}
